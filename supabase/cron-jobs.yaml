# Supabase Cron Jobs Configuration
# This file defines all cron jobs and their associated functions
#
# Schema version: 1.0
version: "1.0"

# Database functions that can be called by cron jobs
# These will be created/updated when syncing
functions:
  - name: trigger_agent_scheduler
    schema: public
    description: "Triggers the agent_scheduler Edge Function to run assessments for all active agents"
    language: plpgsql
    security: definer  # SECURITY DEFINER runs with function owner's privileges
    returns: void
    search_path: public
    body: |
      DECLARE
        response_status integer;
        response_body text;
      BEGIN
        -- Call the agent_scheduler edge function via HTTP
        -- This uses the pg_net extension which is available in Supabase
        SELECT status, body INTO response_status, response_body
        FROM net.http_post(
          url := current_setting('app.settings.supabase_url', true) || '/functions/v1/agent_scheduler',
          headers := jsonb_build_object(
            'Content-Type', 'application/json',
            'Authorization', 'Bearer ' || current_setting('app.settings.service_role_key', true)
          ),
          body := '{}'::jsonb,
          timeout_milliseconds := 300000 -- 5 minutes
        );

        -- Log the result
        IF response_status >= 200 AND response_status < 300 THEN
          RAISE NOTICE 'Agent scheduler executed successfully: %', response_status;
        ELSE
          RAISE WARNING 'Agent scheduler returned status %: %', response_status, response_body;
        END IF;

      EXCEPTION
        WHEN OTHERS THEN
          RAISE WARNING 'Failed to trigger agent scheduler: %', SQLERRM;
      END;

# Scheduled cron jobs
# These will be created/updated in pg_cron
jobs:
  - name: agent-scheduler-15min
    schedule: "0,15,30,45 * * * *"  # Every 15 minutes (cron format)
    command: "SELECT public.trigger_agent_scheduler();"
    enabled: true
    description: "Runs agent scheduler every 15 minutes at 0, 15, 30, and 45 minutes past each hour"

  # Example: Add more jobs here as needed
  # - name: daily-cleanup
  #   schedule: "0 2 * * *"  # 2 AM daily
  #   command: "SELECT public.cleanup_old_data();"
  #   enabled: false
  #   description: "Daily cleanup of old data"

# Configuration settings required for functions
# These should be set in Supabase SQL Editor with:
# ALTER DATABASE postgres SET app.settings.key = 'value';
required_settings:
  - key: app.settings.supabase_url
    description: "Your Supabase project URL (e.g., https://xxx.supabase.co)"
    example: "https://axisniutvyzddbajfble.supabase.co"

  - key: app.settings.service_role_key
    description: "Your Supabase service role key (from Dashboard â†’ Project Settings â†’ API)"
    example: "eyJhbGc..."
    sensitive: true
